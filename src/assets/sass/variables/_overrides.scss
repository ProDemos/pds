/*
    Add colors by name, this will help for consistency and to remember which color to use (you can remember blue--deep-sky, but #00b4e6 is hard)
    Names can be rendered with: https://www.color-blindness.com/color-name-hue/
    pattern: hue--color-name
    If a color contains it's hue in the name, leave the hue in the color name behind, for example:
    #2A3FC9 = 'blue--cerulean-blue', but becomes: 'blue--cerulean'
*/

// use pds-color(name) to get these colors easier

$pds-color-stack: (
    black: #000,
    black--charcoal: #4a4a4a,           // core (text & headers)
    white: #fff,
    transparent: transparent,
    blue--deep-sky: #00b4e6,            // legacy
    blue--neon: #233fff,                // legacy 
    blue--persian: #1C32CC,             // legacy
    blue--pacific: #009FCB,             // core
    blue--dcerulean: #007FA2,
    green--vida-loca: #58a333,          // core 
    green--la-palma:#3D8D35,            // legacy
    green--bilbao: #34810E,
    grey--romance: #f5f0e9,             // core 
    grey--tea: #C5BBAF,
    orange--cinnabar: #eb5b25,          // core
    orange: #EDA300,
    orange--harley-davidson: #D83B14,   // legacy
    orange--grenadier: #D83B00,
    red--crimson: #d60d41,              // core 
    red--hollywood-cerise: #d7007e,     // core
    red--fire-brick:#A6172E,            // legacy
    red--carmine:#A6002B,
    red--jazzberry-jam: #B3116B,        // legacy
    pink--flirt: #B30069,
    violet--purple: #7D0062,
    violet--purple-dark: #98177c,       // core 
    yellow--my-sin: #fcc243,            // core
    yellow--sisal: #C7B8A4,             // legacy
    yellow--merino: #DFD7CC
);

// use pds-color(name) to get these colors,
// but also, these colors will appear in 
// modifiers (like .pds-m-filled.red )

$pds-colors: (

    transparent: map-get($pds-color-stack,transparent),
    white: map-get($pds-color-stack,white),

    black: map-get($pds-color-stack,black),
    // legacy 202306
    black-110: map-get($pds-color-stack,black),
    black-80: mix(map-get($pds-color-stack,black),white, 80%), 
    black-60: mix(map-get($pds-color-stack,black),white, 60%), 
    black-40: mix(map-get($pds-color-stack,black),white, 40%), 
    black-20: mix(map-get($pds-color-stack,black),white, 20%),
    
    // legacy 202306
    sand: map-get($pds-color-stack,grey--romance),
    sand-120: map-get($pds-color-stack,yellow--sisal),
    sand-110: map-get($pds-color-stack,yellow--merino),
    sand-80: mix(map-get($pds-color-stack,grey--romance),white, 80%), 
    sand-60: mix(map-get($pds-color-stack,grey--romance),white, 60%), 
    sand-40: mix(map-get($pds-color-stack,grey--romance),white, 40%), 
    sand-20: mix(map-get($pds-color-stack,grey--romance),white, 20%),

    creme: map-get($pds-color-stack,grey--romance),
    creme-120: map-get($pds-color-stack,grey--tea),
    creme-110: map-get($pds-color-stack,yellow--merino),
    creme-80: mix(map-get($pds-color-stack,grey--romance),white, 80%), 
    creme-60: mix(map-get($pds-color-stack,grey--romance),white, 60%), 
    creme-40: mix(map-get($pds-color-stack,grey--romance),white, 40%), 
    creme-20: mix(map-get($pds-color-stack,grey--romance),white, 20%),

    yellow:map-get($pds-color-stack,yellow--my-sin),   
    yellow-110: map-get($pds-color-stack,orange),      
    yellow-80: mix(map-get($pds-color-stack,yellow--my-sin),white, 80%), 
    yellow-60: mix(map-get($pds-color-stack,yellow--my-sin),white, 60%), 
    yellow-40: mix(map-get($pds-color-stack,yellow--my-sin),white, 40%), 
    yellow-20: mix(map-get($pds-color-stack,yellow--my-sin),white, 20%), 

    orange: map-get($pds-color-stack,orange--cinnabar),
    orange-110: map-get($pds-color-stack,orange--grenadier),
    orange-80: mix(map-get($pds-color-stack,orange--cinnabar),white, 80%), 
    orange-60: mix(map-get($pds-color-stack,orange--cinnabar),white, 60%), 
    orange-40: mix(map-get($pds-color-stack,orange--cinnabar),white, 40%), 
    orange-20: mix(map-get($pds-color-stack,orange--cinnabar),white, 20%), 

    red: map-get($pds-color-stack,red--crimson),
    red-110: map-get($pds-color-stack,red--carmine),
    red-80: mix(map-get($pds-color-stack,red--crimson),white, 80%), 
    red-60: mix(map-get($pds-color-stack,red--crimson),white, 60%), 
    red-40: mix(map-get($pds-color-stack,red--crimson),white, 40%), 
    red-20: mix(map-get($pds-color-stack,red--crimson),white, 20%), 

    pink: map-get($pds-color-stack,red--hollywood-cerise),
    pink-110: map-get($pds-color-stack,pink--flirt),
    pink-80: mix(map-get($pds-color-stack,red--hollywood-cerise),white, 80%), 
    pink-60: mix(map-get($pds-color-stack,red--hollywood-cerise),white, 60%), 
    pink-40: mix(map-get($pds-color-stack,red--hollywood-cerise),white, 40%), 
    pink-20: mix(map-get($pds-color-stack,red--hollywood-cerise),white, 20%), 

    purple:map-get($pds-color-stack,violet--purple-dark),
    purple-110: map-get($pds-color-stack,violet--purple),
    purple-80: mix(map-get($pds-color-stack,violet--purple-dark),white, 80%), 
    purple-60: mix(map-get($pds-color-stack,violet--purple-dark),white, 60%), 
    purple-40: mix(map-get($pds-color-stack,violet--purple-dark),white, 40%), 
    purple-20: mix(map-get($pds-color-stack,violet--purple-dark),white, 20%), 

    blue: map-get($pds-color-stack,blue--pacific),
    blue-110: map-get($pds-color-stack,blue--dcerulean),
    blue-80: mix(map-get($pds-color-stack,blue--pacific), white, 80%), 
    blue-60: mix(map-get($pds-color-stack,blue--pacific), white, 60%), 
    blue-40: mix(map-get($pds-color-stack,blue--pacific), white, 40%), 
    blue-20: mix(map-get($pds-color-stack,blue--pacific), white, 20%),   

    green: map-get($pds-color-stack,green--vida-loca),
    green-110: map-get($pds-color-stack,green--bilbao),
    green-80: mix(map-get($pds-color-stack,green--vida-loca),white, 80%), 
    green-60: mix(map-get($pds-color-stack,green--vida-loca),white, 60%), 
    green-40: mix(map-get($pds-color-stack,green--vida-loca),white, 40%), 
    green-20: mix(map-get($pds-color-stack,green--vida-loca),white, 20%)

);





// use pds-theme-color($themename,$propname)
// to get to these values easier, but also,
// these colors will be appear in themes 
// (like .pds-t-corporate)

$pds-themes: (
    public : (
        fill-color: map-get($pds-colors,orange),
        fill-accent: map-get($pds-colors,green),
        stroke-color: map-get($pds-colors,white), 
        stroke-accent:  map-get($pds-colors,white) 
    ),
    corporate : (
        fill-color: map-get($pds-colors,blue),
        fill-accent: map-get($pds-colors,orange),
        stroke-color: map-get($pds-colors,white),
        stroke-accent: map-get($pds-colors,white) 
    ),
    variant01 : (
        fill-color: map-get($pds-colors,yellow),
        fill-accent: map-get($pds-colors,purple),
        stroke-color: map-get($pds-colors,black), 
        stroke-accent: map-get($pds-colors,white)
    ),
    variant02 : (
        fill-color: map-get($pds-colors,orange),
        fill-accent: map-get($pds-colors,blue),
        stroke-color: map-get($pds-colors,white), 
        stroke-accent:  map-get($pds-colors,white) 
    ),
    variant03 : (
        fill-color: map-get($pds-colors,red),
        fill-accent: map-get($pds-colors,green),
        stroke-color: map-get($pds-colors,white), 
        stroke-accent: map-get($pds-colors,white)
    ),
    variant04 : (
        fill-color: map-get($pds-colors,pink),
        fill-accent: map-get($pds-colors,yellow),
        stroke-color: map-get($pds-colors,white), 
        stroke-accent:  map-get($pds-colors,black) 
    ),
    variant05 : (
        fill-color: map-get($pds-colors,purple),
        fill-accent: map-get($pds-colors,yellow),
        stroke-color:  map-get($pds-colors,white), 
        stroke-accent:  map-get($pds-colors,black)
    ),
    variant06 : (
        fill-color: map-get($pds-colors,green),
        fill-accent: map-get($pds-colors,red),
        stroke-color:  map-get($pds-colors,white), 
        stroke-accent: map-get($pds-colors,white)
    )
);

$pds-deftheme: 'corporate' !default;


// Opacity values, used for color
$pds-lighten-scale: 0% 10% 20% 30% 40% 50%;
$pds-darken-scale: 5% 10%;


// Provide a default font-size list for a consistent typing scale
// use `pds-fontsize(m)` to get fontsize m
$pds-fontsizes: (
  tiny: 8px,
  xxs: 12px,
  xs: 14px,
  s: 16px,
  default: 18px,
  m: 22px,
  l: 24px,
  xl: 32px,
  xxl: 44px,
  huge: 56px,
);
$pds-fontsize: map-get($pds-fontsizes, default) !default;


$pds-lineheights: (
  none: 0,
  xs: 1,
  s: 1.25,
  default: 1.5,
  m: 1.75,
);
$pds-lineheight: map-get($pds-lineheights, default) !default;


// Provide a default spacing scale for consistent spacings
// eg: top: nth($pds-spacings, 4); = 12px
$pds-spacings: 0 4px 8px 12px 16px 20px 24px 32px 48px 56px;


$pds-breakpoints: (
    xs: 0,
    sm: 550px,
    md: 768px,
    lg: 990px,
    xl: 1200px
);
