


@function pds-color-o($name) {
    @if map-has-key($pds-colors, $name) == false {
        @if map-has-key($pds-color-stack, $name) == false {
            @error  "There is no color named `#{$name}`";
        }
        @return map-get($pds-color-stack, $name);
    }
    @return map-get($pds-colors, $name);
}

@function pds-color($name) {
    //@debug("color "+$name+"=var(--pds-color-#{$name})");
    @if map-has-key($pds-colors, $name) == false {
        @error  "There is no color named `#{$name}`";
    }
    @return var(--pds-color-#{$name});
}

@function pds-theme-color($theme : $pds-deftheme ,$key : fill) {
    @if map-has-key($pds-themes, $theme) == false {
        @error
            "There is no theme named `#{$theme}` in `$pds-themes`";
    }

    $mapkey : $key;
    @if ($key == 'fill-color')   { $mapkey: 'fill'; }
    @if ($key == 'color')  { $mapkey: 'fill'; }
    @if ($key == 'accent') { $mapkey: 'fill2'; }
    @if ($key == 'stroke-color') { $mapkey: 'stroke'; }
    @if ($key == 'fill-accent') { $mapkey: 'fill2'; }
    @if ($key == 'stroke-accent') { $mapkey: 'stroke2'; }

    $thememap : map-get($pds-themes, $theme);
    @if map-has-key($thememap, $mapkey) == false {
        @error
            "There is no value named `#{$mapkey}` in theme `#{$theme}`";
    }
    @return map-get($thememap,$mapkey);
}
