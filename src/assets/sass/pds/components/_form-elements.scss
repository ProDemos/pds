
// -----------------------------------------------------------------------------
//  COMPONENT .pds-c-input
// .pds-c-input[.disabled]
//  input[type=text|email|tel|password|date|time].pds-c-input [.valid|.invalid]
//  select.pds-c-input [.full-width]
//  textarea.pds-c-input [.full-width]
// .pds-c-input.container[.radio|.checkbox]
// .pds-c-input-container.radio > input[type=radio][.has-validation] + .pds-c-input-check + label
// .pds-c-input-container.checkbox > input[type=checkbox][.has-validation] + .pds-c-input-check + label
// .pds-c-progress[.pending|.ready|.error][.white] > .spinner
// -----------------------------------------------------------------------------



.pds-c-input-container {

    margin-bottom: nth($pds-spacings, 5);

    // Radiobutton
    &.radio, &:has(input[type=radio]) {

        
        // The label
        label, .pds-c-input-label {
            display: block;
            position: relative;
            padding: nth($pds-spacings, 4) nth($pds-spacings, 6) nth($pds-spacings, 4) nth($pds-spacings, 9);
            margin: nth($pds-spacings, 4) auto;
            z-index: 2;
            cursor: pointer;
            transition: all 0.25s linear;
        }

        input[type=radio], .pds-c-input.radio {
            position: absolute;
            visibility: hidden;
            &.has-validation {
                visibility: visible;
                width: 1em;
                height: 1em;
                opacity: 0;
            }
        }

        // The checkable element (replaces the invisible radio-input)
        .pds-c-input-check {
            display: block;
            position: absolute;
            border: 1px solid pds-color(black-20);
            border-radius: 100%;
            background-color: pds-color(sand);
            height: nth($pds-spacings, 6);
            width: nth($pds-spacings, 6);
            top: nth($pds-spacings, 4);
            left: nth($pds-spacings, 5);
            z-index: 5;
            transition: border 0.25s linear;
            cursor: pointer;

            // The radio tick
            &::before {
                display: block;
                position: absolute;
                content: "";
                border-radius: 100%;
                height: nth($pds-spacings, 4);
                width: nth($pds-spacings, 4);
                top: 3px;
                left: 3px;
                margin: auto;
                transition: background 0.25s linear;
            }
        }
        
    }
    &.checkbox, &:has(input[type=checkbox])  {
       
        // The label
        label, .c-input-label {
            display: block;
            position: relative;
            padding: nth($pds-spacings, 4) nth($pds-spacings, 6) nth($pds-spacings, 4) nth($pds-spacings, 9);
            margin: nth($pds-spacings, 4) auto;
            z-index: 2;
            cursor: pointer;
            transition: all 0.25s linear;
        }


        // The radio input itself
        input[type=checkbox],.pds-c-input.checkbox {
            position: absolute;
            visibility: hidden;
            &.has-validation {
                visibility: visible;
                width: 1em;
                height: 1em;
                opacity: 0;
            }
        }

        // The checkable element (replaces the invisible checkbox)
        .pds-c-input-check {
            display: block;
            position: absolute;
            border: 1px solid pds-color(black-20);
            background-color: pds-color(sand);
            height: nth($pds-spacings, 6);
            width: nth($pds-spacings, 6);
            top: nth($pds-spacings, 4);
            left: nth($pds-spacings, 5);
            z-index: 5;
            transition: border 0.25s linear;
            cursor: pointer;
        
            // The checkbox tick
            &::before {
                display: block;
                position: absolute;
                content: "";
                height: nth($pds-spacings, 4);
                width: nth($pds-spacings, 4);
                top: 3px;
                left: 3px;
                margin: auto;
                transition: background 0.25s linear;
            }
            
        }
    }


    //default labels are styled
    label {
        @extend .pds-c-input-label;
    }

}


// The default label styling
.pds-c-input-label {
    margin-bottom: nth($pds-spacings, 5);
    color: pds-color(black);
    font-family: $font--fira-sans;
    font-size: pds-fontsize(s);
    font-weight: 500;
}



// Basic input styling, shared by all inputs
.pds-c-input {
    outline: none;
    color: pds-color(black);
    font-family: $font--fira-sans;
    font-size: pds-fontsize(s);
    line-height: pds-lineheight(m);
    border-radius: 0;
    background-color: pds-color(sand);

    /* stylelint-disable property-no-vendor-prefix */
    -webkit-appearance: none;
    /* stylelint-enable property-no-vendor-prefix */


    &.disabled {
        color: lighten(pds-color(black), nth($pds-lighten-scale, 5));
        background-color: lighten((pds-color(sand)), nth($pds-lighten-scale, 1));
        cursor: not-allowed;
    }

    &[type=text], 
    &[type=email],
    &[type=tel],
    &[type=password],
    &[type=number],
    &[type=date],
    &[type=time],
    &.text {

        padding: nth($pds-spacings, 4) nth($pds-spacings, 9) nth($pds-spacings, 3) nth($pds-spacings, 6);
        border: none;
        border-bottom: 3px solid pds-color(sand);
        transition: border-bottom-color 150ms ease-in-out;

        

        &.valid {
            background-image: url("#{$pds-assets-path}/images/icons/24px/check-green.svg");
            background-position: top 13px right 15px;
            background-repeat: no-repeat;
            background-size: 24px 24px;
            border-bottom-color: pds-color(green);
        }

        &.invalid {
            background-image: url("#{$pds-assets-path}/images/icons/24px/error-red.svg");
            background-position: top 13px right 15px;
            background-repeat: no-repeat;
            background-size: 24px 24px;
            border-bottom-color: pds-color(red);
        }

        &:read-only {
            background-color: pds-color(black-20);
            border-bottom-color: pds-color(black-20);
            color: pds-color(black-60);
            cursor: default;
            &:focus {
              border-bottom-color: pds-color(black-20);
            }
        }
    }

    // some exceptions
    &[type=number],
    &[type=date],
    &[type=time] {
        padding-right: nth($pds-spacings, 6);
    }

    @at-root select#{&}, &.dropdown {
        padding: nth($pds-spacings, 4) nth($pds-spacings, 9) nth($pds-spacings, 4) nth($pds-spacings, 6);
        border: none;
        border-bottom: 2px solid pds-color(transparent);
        background-image: url("#{$pds-assets-path}/images/icons/chevrons-updown.svg");
        background-position: top 13px right 15px;
        background-repeat: no-repeat;
        background-size: 24px 24px;
        cursor: pointer;
        transition: border-bottom-color 150ms ease-in-out;

        &:disabled {
            background-color: pds-color(black-20);
            border-bottom-color: pds-color(black-20);
            color: pds-color(black-60);
            cursor: default;
            &:focus {
              border-bottom-color: pds-color(black-20);
            }
        }
        &.full-width {
            width: 100%;
        }
  
    }
    @at-root textarea#{&} {
        padding: nth($pds-spacings, 4) nth($pds-spacings, 9) nth($pds-spacings, 3)
          nth($pds-spacings, 6);
        border: none;
        border-bottom: 3px solid pds-color(creme);
        transition: border-bottom-color 150ms ease-in-out;
        &:read-only {
            background-color: pds-color(black-20);
            border-bottom-color: pds-color(black-20);
            color: pds-color(black-60);
            cursor: default;
            &:focus {
              border-bottom-color: pds-color(black-20);
            }
        }
        &.full-width {
            width: 100%;
        }
    }

    &.radio {

        // this is hidden, but only in a 
        // pds-c-input-container with a
        // visible check

    }
    &.checkbox {
        // this is hidden, but only in a 
        // pdx-c-input-container with a 
        // visible check
    }
    &.transparent {
        background-color: transparent;
    }

}

// fake input
span.pds-c-input {
    display:inline-block;
    padding: 10px nth($pds-spacings, 9) 10px nth($pds-spacings, 6);
}

// ----theming -------
      

@mixin pds-c-input-container-theme($theme : $pds-deftheme) {
    &.radio {
        input[type=radio], .pds-c-input.radio {
            &:checked ~ .pds-c-input-check {
                border: 1px solid darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));

                &::before {
                    background-color: darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));
                }
            }
        }
        @include hover {
            .c-input-check {
                border-color: darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));
            }
        }
    }
    &.checkbox {
        input[type=checkbox], .pds-c-input.checkbox {
            &:checked ~ .pds-c-input-check {
                border: 1px solid darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));
                &::before {
                    background-color: darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));
                }
            }
        }
        @include hover {
            .c-input-check {
                border-color: darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));
            }
        }
    }
}

@mixin pds-c-input-theme($theme : $pds-deftheme) {
    &[type=text], 
    &[type=email],
    &[type=tel],
    &[type=password],
    &[type=date],
    &[type=time],
    &.text {
        &:focus:not(:disabled) {
            border-bottom-color: darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));
        }
    }
}

@mixin pds-c-select-theme($theme : $pds-deftheme) {
    &:focus:not(:disabled),
    &:hover:not(:disabled) {
        border-bottom-color: darken(pds-theme-color($theme,fill), nth($pds-darken-scale, 1));
    }
}

@mixin pds-c-textarea-theme($theme: $pds-deftheme) {
    &:focus:not(:disabled) {
      border-bottom-color: darken(
        pds-theme-color($theme, fill),
        nth($pds-darken-scale, 1)
      );
    }
}
  

.pds-c-input-container {
    @include pds-c-input-container-theme();
}

.pds-c-input {
   @include pds-c-input-theme();
}
    
select.pds-c-input, 
.pds-c-input.dropdown {
    @include pds-c-select-theme();
}

textarea.pds-c-input {
    @include pds-c-textarea-theme();
}

@each $theme in map-keys($pds-themes) {

    .pds-c-input-container {
        .pds-t-#{$theme} &,
        &.pds-t-#{$theme}:not(.inherit) {
            @include pds-c-input-container-theme($theme);
        }
    }

    .pds-c-input {
        .pds-t-#{$theme} &,
        &.pds-t-#{$theme}:not(.inherit) {
            @include pds-c-input-theme($theme);
        }
    }
        
    select.pds-c-input, 
    .pds-c-input.dropdown {
        .pds-t-#{$theme} &, 
        &.pds-t-#{$theme}:not(.inherit) {
            @include pds-c-select-theme($theme);
        }
    }

    textarea.pds-c-input {
        .pds-t-#{$theme} &, 
        &.pds-t-#{$theme}:not(.inherit) {
            @include pds-c-textarea-theme($theme);
        }
    }
}
      
/* spinner */

.pds-c-button + .pds-c-progress {
    margin-left: 1em;
}
  
.pds-c-progress {
    position: relative;
    display: inline-block;
    visibility: hidden;
    color: transparent;
  
    &.pending {
      visibility: visible;
      .spinner {
        display: inline-block;
      }
    }
  
    &.ready {
      visibility: visible;
      color: inherit;
    }
    &.error {
      visibility: visible;
      color: pds-color(red);
    }
  
    .spinner {
      display: none;
      position: relative;
      vertical-align: middle;
      width: 1.5em;
      &:before {
        content: "";
        display: block;
        padding-top: 100%;
      }
      &:after {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 100%;
        margin: 0px auto;
        border-left: 6px solid rgba(0, 0, 0, 0.15);
        border-right: 6px solid rgba(0, 0, 0, 0.15);
        border-bottom: 6px solid rgba(0, 0, 0, 0.15);
        border-top: 6px solid rgba(0, 0, 0, 0.8);
        border-radius: 100%;
  
        -webkit-animation: pds-anim-rotation 0.6s infinite linear;
        -moz-animation: pds-anim-rotation 0.6s infinite linear;
        -o-animation: pds-anim-rotation 0.6s infinite linear;
        animation: pds-anim-rotation 0.6s infinite linear;
      }
    }
    &.white {
        .spinner {
            &:after {
            border-left: 6px solid rgba(255, 255, 255, 0.15);
            border-right: 6px solid rgba(255, 255, 255, 0.15);
            border-bottom: 6px solid rgba(255, 255, 255, 0.15);
            border-top: 6px solid rgba(255, 255, 255, 0.8);
            border-radius: 100%;
            }
        }
    }
}
  
@keyframes pds-anim-rotation {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(359deg);
    }
}