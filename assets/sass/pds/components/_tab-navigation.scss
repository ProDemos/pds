
// -----------------------------------------------------------------------------
//  COMPONENT .pds-c-tabs
//
// .pds-c-tabs-container
// .pds-c-tabs-container > ( ul | ol | .pds-c-tabs ) [ + .pds-c-tabs-panels ]
// .pds-c-tabs > ( li | .pds-c-tabs-item ) > ( a | .pds-c-tabs-link )[ .current ]
// .pds-c-tabs-panels > .pds-c-tabs-panel[ .current ]
// -----------------------------------------------------------------------------


.pds-c-tabs-container {

    ul, ol, .pds-c-tabs {

        margin: 0;
        padding: 0;
        list-style: none;

        @include media-from(md) {
            display: flex;
            border-bottom: 1px solid get-color(grey--gainsboro);
        }
    
        li, .pds-c-tabs-item {

            position: relative;
            text-align: center;
            border-bottom: 1px solid get-color(grey--gainsboro);

            @include media-from(md) {
                margin: 0 nth($spacing-scale, 3);
                border: none;
            }

            @include media-from(lg) {
                margin: 0 nth($spacing-scale, 5);
            }

            &:first-child {
                margin-left: 0;
            }

            &:last-child {
                margin-right: 0;
            }
        
            a, .pds-c-tabs-link {

                display: inline-block;
                padding: nth($spacing-scale, 3) 0 nth($spacing-scale, 3);
                color: get-color(black);
                font-family: $font--fira-sans;
                font-size: nth($type-scale, 8);
                font-weight: 500;
                line-height: 1.5;
                text-decoration: none;
                text-transform: uppercase;
                border: none;
                background-color: get-color(white);
                transition: all 100ms ease-in-out;
                cursor: pointer;

                @include media-from(md) {
                    position: relative;
                    padding: nth($spacing-scale, 2) 0 nth($spacing-scale, 5);
                }

                &::after {
                    content: "";
                    display: block;
                    position: absolute;
                    height: 3px;
                    width: 100%;
                    bottom: 0;
                    left: 0;
                    background-color: get-color(transparent);
                    opacity: 1;
                    transition: all 250ms ease-in-out;
                }

                &.active {
                    &::after {
                        opacity: 1;
                    }

                }
            }
        }
    }
    .pds-c-tabs-panels {
        
        .pds-c-tabs-panel {
            padding: nth($spacing-scale, 5) 0;
            display:none;
            &.active {
                display:block;
            }
        }
    }

}

// Themeing

.pds-c-tabs-container {
    ul, ol, .pds-c-tabs {
        a, .pds-c-tabs-link {
            @include media-from(md) {
                &:hover,
                &:focus {
                    color: darken((get-color(#{nth($pds-deftheme, 2)})), nth($color-darken-scale, 1));
                    &::after {
                        opacity: 1;
                        background-color: darken((get-color(#{nth($pds-deftheme, 2)})), nth($color-darken-scale, 1));
                    }
                }
            }
            &.active {
                color: darken((get-color(#{nth($pds-deftheme, 2)})), nth($color-darken-scale, 1));
                &::after {
                    background-color: darken((get-color(#{nth($pds-deftheme, 2)})), nth($color-darken-scale, 1));
                }
            }
        }
    }
} 

@each $theme in $prodemos-themes {
    // the inherit class is only to make it more specific
    .t-#{nth($theme,1)} .pds-c-tabs-container,
    .pds-c-tabs-container.t-#{nth($theme,1)}:not(.inherit) {
        ul, ol, .pds-c-tabs {
            a, .pds-c-tabs-link {
                @include media-from(md) {
                    &:hover,
                    &:focus {
                        color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 1));
                        &::after {
                            opacity: 1;
                            background-color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 1));
                        }
                    }
                }
                &.active {
                    color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 1));
                    &::after {
                        background-color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 1));
                    }
                }
            }
        }
    } 
}


