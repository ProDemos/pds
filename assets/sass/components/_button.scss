// -----------------------------------------------------------------------------
// #HELPERS buttons
// -----------------------------------------------------------------------------


.c-btn {
    position: relative;
    display: inline-block;
    padding: nth($spacing-scale, 5) nth($spacing-scale, 6); // 16px 20px
    font-family: $font--fira-sans;
    font-size: nth($type-scale, 5);
    font-weight: 500;
    line-height: 1.5;
    text-decoration: none;
    border: none;
    transition: all 100ms ease-in-out;
    cursor: pointer;
}



// Importance
.c-btn--primary {
    margin-left: 10px;

    &::before,
    &::after {
        content: "";
        position: absolute;
        transition: all 100ms ease-in-out;
        z-index: -1;
    }

    &::before {
        width: 10px;
        height: 100%;
        bottom: -5px;
        left: -10px;
        transform: skewY(-45deg);
    }

    &::after {
        width: 100%;
        height: 10px;
        bottom: -10px;
        left: -5px;
        transform: skewX(-45deg);
    }

    // Hover styles, but only when the button is not disabled
    /* stylelint-disable max-nesting-depth */
    &:not(.c-btn--disabled) {
        @include hover {
            transform: translate(-2px, 2px);

            &::before {
                width: 8px;
                height: 100%;
                bottom: -5px;
                left: -8px;
            }

            &::after {
                width: 100%;
                height: 8px;
                bottom: -8px;
                left: -5px;
            }
        }
    }

    &:active:not(.c-btn--disabled) {
        transform: translate(-5px, 5px);

        &::before {
            width: 6px;
            height: 100%;
            bottom: -3px;
            left: -6px;
        }

        &::after {
            width: 100%;
            height: 6px;
            bottom: -6px;
            left: -3px;
        }
    }
    /* stylelint-enable max-nesting-depth */
}



// Sizing
.c-btn--large {
    padding: nth($spacing-scale, 5) nth($spacing-scale, 6); // 16px 20px
    font-size: nth($type-scale, 5);
}



.c-btn--regular {
    padding: nth($spacing-scale, 4) nth($spacing-scale, 5); // 12px 16px
    font-size: nth($type-scale, 6);
}



.c-btn--small {
    padding: nth($spacing-scale, 3) nth($spacing-scale, 4); // 8px 12px
    font-size: nth($type-scale, 7);
}



.c-btn--toggle {
    width: 100%;
    padding: nth($spacing-scale, 3)  nth($spacing-scale, 4); // 8px 12px
    font-size: nth($type-scale, 7);
    text-align: center;
    border-style: solid;
    border-width: 2px;
}



.c-btn--transparent {
    padding: nth($spacing-scale, 3) 0; // 8px 0px
    font-size: nth($type-scale, 7);
}



// Themeing

/* stylelint-disable max-nesting-depth */
@each $theme in $prodemos-themes {
    .c-btn--#{nth($theme,1)} {
        color: get-color(white);
        background-color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 1));

        @include hover {
            background-color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 2));
        }

        &.c-btn--primary {
            &::before,
            &::after {
                background-color: lighten((get-color(#{nth($theme, 2)})), nth($color-lighten-scale, 3));
            }

            // Hover styles, but only when the button is not disabled
            &:not(.c-btn--disabled) {
                @include hover {
                    &.c-btn--primary {
                        &::before,
                        &::after {
                            background-color: lighten((get-color(#{nth($theme, 2)})), nth($color-lighten-scale, 2));
                        }
                    }
                }
            }

            &:active:not(.c-btn--disabled) {
                &.c-btn--primary {
                    &::before,
                    &::after {
                        background-color: lighten((get-color(#{nth($theme, 2)})), nth($color-lighten-scale, 1));
                    }
                }
            }
        }

        &.c-btn--accent {
            background-color: darken((get-color(#{nth($theme, 3)})), nth($color-darken-scale, 1));

            &.c-btn--primary {
                &::before,
                &::after {
                    background-color: lighten((get-color(#{nth($theme, 3)})), nth($color-lighten-scale, 3));
                }
            }

            // Hover styles, but only when the button is not disabled
            &:not(.c-btn--disabled) {
                @include hover {
                    background-color: darken((get-color(#{nth($theme, 3)})), nth($color-darken-scale, 2));

                    &.c-btn--primary {
                        &::before,
                        &::after {
                            background-color: lighten((get-color(#{nth($theme, 3)})), nth($color-lighten-scale, 2));
                        }
                    }
                }
            }

            &:active:not(.c-btn--disabled) {
                &.c-btn--primary {
                    &::before,
                    &::after {
                        background-color: lighten((get-color(#{nth($theme, 3)})), nth($color-lighten-scale, 1));
                    }
                }
            }
        }

        &.c-btn--disabled {
            background-color: lighten((get-color(#{nth($theme, 2)})), nth($color-lighten-scale, 4));

            &.c-btn--primary {
                &::before,
                &::after {
                    background-color: lighten((get-color(#{nth($theme, 2)})), nth($color-lighten-scale, 5));
                }
            }
        }

        &.c-btn--toggle {
            color: get-color(black);
            border-color: get-color(grey--romance);
            background-color: get-color(grey--romance);

            &:not(.c-btn--disabled) {
                @include hover {
                    border-color: darken((get-color(grey--romance)), nth($color-darken-scale, 2));
                    background-color: darken((get-color(grey--romance)), nth($color-darken-scale, 2));
                }
            }

            &:active:not(.c-btn--disabled) {
                color: get-color(white);
                background-color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 1));
            }

            &:focus:not(.c-btn--disabled) {
                border-color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 1));
            }

            &.c-btn--disabled {
                color: lighten(get-color(black), nth($color-lighten-scale, 5));
            }
        }

        &.c-btn--transparent {
            color: darken((get-color(#{nth($theme, 2)})), nth($color-darken-scale, 2));
            background-color: get-color(transparent);
        }
    }
}
/* stylelint-enable max-nesting-depth */



// Disabled state
.c-btn--disabled {
    cursor: not-allowed;
}



// --- Sub elements

// Icon-prefix or icon-suffix
.c-button__icon-container {
    display: flex;
    align-items: center;
}

.c-button__icon-container__label {
    flex: 1 1 auto;
    text-align: center;
}

.c-button__icon-container__label--right {
    text-align: right;
}

.c-button__icon-container__label--left {
    text-align: left;
}

